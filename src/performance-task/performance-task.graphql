# enum QuestionType {
#   MULTIPLE_CHOICE
#   FILL_IN_THE_BLANK_WITH_OPTIONS
#   TRUE_FALSE
#   FILL_IN_THE_BLANK_FREE_TEXT
#   ESSAY
# }

# enum Difficulty {
#   EASY
#   MEDIUM
#   HARD
# }

# type Question {
#   id: String!
#   content: String!
#   type: QuestionType!
#   difficulty: Difficulty!
#   answers: [Answer!]!
# }

# type Taxonomy {
#   difficulty: Difficulty!
#   quantity: Int!
# }

type PerformanceTask {
  id: String!
  objectives: String!
  description: String!
  tone: String!
  modality: String!
  language: String
  audience: Audience!
  # questionTypes: [QuestionType!]!
  # taxonomies: [Taxonomy!]
  # questions: [Question!]

  createdAt: DateTime!
  updatedAt: DateTime!
}

# type Answer {
#   id: String!
#   text: String!
# }

type Audience {
  ageStart: Int!
  ageEnd: Int!
  level: String!
  desc: String
}

input CreateAudienceInput {
  ageStart: Int!
  ageEnd: Int!
  level: String!
  desc: String
}

# input CreateQuestionInput {
#   content: String!
#   type: QuestionType!
#   difficulty: Difficulty!
#   answers: [AnswerInput!]!
# }

# input AnswerInput {
#   content: String!
#   isCorrect: Boolean!
# }

# input TaxonomyInput {
#   difficulty: Difficulty!
#   quantity: Int!
# }

input CreatePerformanceTaskInput {
  objectives: String!
  description: String!
  tone: String!
  modality: String!
  language: String
  audience: CreateAudienceInput!
}

input UpdatePerformanceTaskInput {
  id: String!
}

type Query {
  performanceTask: [PerformanceTask]!
  performanceTask(id: String!): PerformanceTask
}

type Mutation {
  createPerformanceTask(createPerformanceTaskInput: CreatePerformanceTaskInput!): PerformanceTask!
  updatePerformanceTask(updatePerformanceTaskInput: UpdatePerformanceTaskInput!): PerformanceTask!
  removePerformanceTask(id: String!): PerformanceTask
}
