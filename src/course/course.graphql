type Course {
  id: String
  title: String
  objective: [String!]
  description: String!
  language: String
  category: String!
  tone: String!
  modality: String!
  classSize: String!
  topics: [String!]
  duration: Int!
  durationLesson: Int!
  creatorId: String!

  outline: CourseOutline
  detailedOutline: CourseDetailedOutline

  createdAt: DateTime!
  updatedAt: DateTime!

  audience: Audience!
}

type Audience {
  ageStart: Int!
  ageEnd: Int!
  level: String!
  desc: String
}

input CreateAudienceInput {
  ageStart: Int!
  ageEnd: Int!
  level: String!
  desc: String
}



input CreateCourse {
  description: String!
  language: String
  category: String!
  tone: String!
  modality: String!
  classSize: String!
  topics: [String]
  duration: Int!
  durationLesson: Int!
  audience: CreateAudienceInput!
}

input UpdateCourse {
  title: String
  objective: [String!]
  description: String
  language: String
  category: String
  tone: String
  modality: String
  classSize: String
  topics: [String!]
  duration: Int
  durationLesson: Int
  audience: CreateAudienceInput

  outline: UpdateCourseOutline
  detailedOutline: UpdateCourseDetailedOutline
}

input CreateCourseTitle {
  courseId: String!
}

type GeneratedCourseTitle {
  title: String!
  reason: String
}

input CreateCourseObjective {
  courseId: String!
}

input CreateCourseOutline {
  courseId: String!
}

type GeneratedCourseObjective {
  objective: String!
  outcome: String
}

input UpdateCourseOutline {
  courseDuration: String!
  inScope: [InputTopic!]!
  outOfScope: [InputTopic!]!
  explanation: String
}

type CourseOutline {
  courseDuration: String!
  inScope: [Topic!]!
  outOfScope: [Topic!]!
  explanation: String
}

type CourseDetailedOutline {
  sections: [DetailedOutlineSection!]!
  objectiveTopicConnections: [DetailedOutlineObjective!]!
  summary: CourseDetailedSummary!
  rationale: String!
}

input UpdateCourseDetailedOutline {
  sections: [UpdateDetailedOutlineSectionInput!]!
  objectiveTopicConnections: [UpdateDetailedOutlineObjectiveInput!]!
  summary: CourseDetailedSummaryInput!
  rationale: String!
}

type DetailedOutlineSection {
  title: String!
  topics: [DetailedOutlineTopic]!
}

type DetailedOutlineTopic {
  title: String!
  onScreenContent: String!
  topicDescription: String!
  detailedCoverage: String!
  resources: String!
  connection: [String!]!
  timingMins: Int!
}

input DetailedOutlineTopicInput {
  title: String!
  onScreenContent: String!
  topicDescription: String!
  detailedCoverage: String!
  resources: String!
  connection: [String!]!
  timingMins: Int!
}

input UpdateDetailedOutlineSectionInput {
  title: String!
  topics: [DetailedOutlineTopicInput!]
}

type DetailedOutlineObjective {
  objective: String!
  topics: [String!]
}

input UpdateDetailedOutlineObjectiveInput {
  objective: String!
  topics: [String!]
}

type CourseDetailedSummary {
  totalSections: Int!
  totalTopics: Int!
  courseHours: Int!
}

input CourseDetailedSummaryInput {
  totalSections: Int!
  totalTopics: Int!
  courseHours: Int!
}

type Topic {
  topic: String!
  subtopics: [String!]!
}

input InputTopic {
  topic: String!
  subtopics: [String]!
}

type Mutation {
  createCourse(data: CreateCourse!): Course

  updateCourse(id: String!, data: UpdateCourse!): Course!

  deleteCourse(id: String!): Course

  createCourseTitle(courseId: String!): [GeneratedCourseTitle]!

  createCourseObjective(courseId: String!): [GeneratedCourseObjective]!

  createCourseOutline(courseId: String!): CourseOutline!

  createCourseDetailedOutline(courseId: String!): CourseDetailedOutline!
}

type Subscription {
  courseUpdated(courseId: String!): Course!
}

type Query {
  courses: [Course]!
  course(id: String!): Course!
}
