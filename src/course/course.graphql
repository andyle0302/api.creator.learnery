type Course {
  id: String!
  title: String!
  objective: String!
  description: String!
  language: String
  category: String!
  tone: String!
  modality: String!
  classSize: String!
  topics: [String!]
  duration: Int!
  durationLesson: Int!
  creatorId: String!

  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateCourse {
  title: String!
  objective: String!
  description: String!
  language: String
  category: String!
  tone: String!
  modality: String!
  classSize: String!
  topics: [String!]
  duration: Int!
  durationLesson: Int!
  audienceId: String!
}

input UpdateCourse {
  title: String
  objective: String
  description: String
  language: String
  category: String
  tone: String
  modality: String
  classSize: String
  topics: [String!]
  duration: Int
  durationLesson: Int
}


type Query {
  courses: [Course]!
  course(id: String!): Course!
}

type Mutation {
  createCourse(data: CreateCourse!): Course

  updateCourse(id: String!, data: UpdateCourse!): Course!

  deleteCourse(id: String!): Course
}
